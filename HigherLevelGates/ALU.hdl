CHIP ALU {
  IN  
    x[16], y[16],  // Two 16-bit inputs        
    zx, // zero the x input?
    nx, // negate the x input?
    zy, // zero the y input?
    ny, // negate the y input?
    f,  // compute out = x + y (if 1) or x & y (if 0)
    no; // negate the out output?
  
  OUT 
    out[16], // 16-bit output
    zr, // 1 if (out == 0), 0 otherwise
    ng; // 1 if (out < 0),  0 otherwise
  
  PARTS:
    // Put you code here:
    
    //ZeroX
    Mux16( a = x, b = false, sel = zx, out = zeroxout); 
    
    //NotX
    Not16( in = zeroxout, out = notx); 
    Mux16( a = zeroxout, b = notx, sel = nx, out = notxout); 
    
    
    //Zeroy
    Mux16( a = x, b = false, sel = zy, out = zeroyout); 
    
    //Noty
    Not16( in = zeroyout, out = noty); 
    Mux16( a = zeroyout, b = noty, sel = ny, out = notyout);
    
    //Function
    Add16( a = notxout, b = notyout, out = addout);
    And16( a = notxout, b = notyout, out = andout); 
    Mux16( a = andout, b = addout, sel = f, out = fout); 
    
    //Negate out
    Not16( in = fout, out = nout);
    Mux16( a = fout, b = nout, sel = no, out = result);
    
    
    //is out negative
    And16(a[0..15]=true, b=result, out[15] = ng, out[0..14]=drop);
    
    //Is output all 0's?
    OrAll(in = result, out = resultz);
    Not( in = resultz, out = zr);
    
    Or16(a=result, b[0..15]=false, out=out);
}